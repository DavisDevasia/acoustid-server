// Acoustid -- Audio fingerprint lookup server
// Copyright (C) 2010  Lukas Lalinsky
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

package org.acoustid.server.handler.ws;

import java.io.ByteArrayOutputStream;
import java.sql.SQLException;
import org.acoustid.Track;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.mockito.Mockito.*;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.stream.XMLOutputFactory;
import org.acoustid.Application;
import org.acoustid.FingerprintSearchResult;
import org.acoustid.data.ApplicationData;
import org.acoustid.data.FingerprintData;
import org.acoustid.data.TrackData;
import org.acoustid.server.Context;
import org.acoustid.server.util.ParameterMap;
import org.acoustid.server.util.SimpleXMLStreamWriter;
import org.junit.Before;

public class LookupHandlerTest {

    private ApplicationData applicationData;
    private FingerprintData fingerprintData;
    private Context context;

    @Before
    public void setUp() throws SQLException {
        fingerprintData = mock(FingerprintData.class);
        applicationData = mock(ApplicationData.class);
        context = mock(Context.class);
    }

    @Test
    public void testSuccessfulLookupWithMetadata() throws IOException, SQLException, Exception {
        LookupHandler handler = new LookupHandler();
        handler.setFingerprintData(fingerprintData);
        handler.setApplicationData(applicationData);
        handler.setContext(context);
        handler.setTrackData(new TrackData() {

            @Override
            public int insert(Track track) throws SQLException {
                throw new UnsupportedOperationException("Not supported yet.");
            }

            @Override
            public boolean insertMBID(int trackId, String mbid) throws SQLException {
                throw new UnsupportedOperationException("Not supported yet.");
            }

            @Override
            public void loadMBIDs(List<Track> tracks) throws SQLException {
                for (Track track : tracks) {
                    track.setMBIDs(new ArrayList<String>());
                    track.getMBIDs().add("mbid" + track.getId());
                }
            }

        });

        Map<String, String[]> params = new HashMap<String, String[]>();
        params.put("client", new String[] { "appkey" });

        Application app = new Application();
        app.setId(5);
        when(applicationData.findByApiKey("appkey")).thenReturn(app);

        int[] rawFingerprint = new int[] {1260302791, 1226765698, 1216267650, 1224658306, 1224592802, 1509746150, 1239180775, 1230792167, 1230447941, 1230378245, 1238768901, 1238762769, 1272186144, 1272211232, 1263854369, 1263854371, 1260302659, 1230943682, 1241433474, 1241435522, 1241370034, 1241314786, 1230792166, 1230267750, 1230447879, 1230403335, 1238783745, 1272334097, 1272202528, 1254417696, 1246028129, 1258611173, 1260303815, 1226765698, 1233044866, 1241435522, 1241374114, 1241310694, 1239180775, 1230775783, 1230386501, 1230378245, 1238768901, 1238828337, 1272186144, 1263822113, 1263854373, 1264378743, 1264498115, 1233049026, 1241433474, 1240452482, 1241357746, -914571806, -648761882, -648761882, -648632378, -640239674, -53045433, -36208297, -36404891, -44785300, -48963220, -48990740, -48857108, -48866580, -44676379, -7008283, -7071785, -2857017, -11214386, -15276594, -15272506, -44645033, -36191113, -40520665, -7031771, -2842587, -11214531, -14883555, -48302243, -48302491, -44153115, -35830043, -2865435, -3910689, -12295729, -49912370, -44663602, -61453090, -53064482, -57287298, -57346241, -53157313, -53157345, -44763633, -44698049, -11075793, -2687699, -19407769, -19606441, -28978993, -16256562, -16354354, -48867362, -48886018, -61534218, -53182482, -40601618, -40568849, -40572963, -40572980, -36378676, -11143308, -15214748, -31992028, -1105766811, -32020905, -15243450, -11078394, -36252394, -57228202, -57163690, -57282473, -40570755, -44769171, -48995220, -48923140, -48858132, -44672276, -2748699, -7073803, -2861113, -2858554, -11017778, -15272506, -11086522, -44645289, -36203465, -40520665, -2837467, -11214803, -15408867, -14813859, -48302211, -44108059, -304199963, -275495195, -271301657, -3906609, -12229170, -49908530, -44671794, -61453090, -52966018, -57281154, -57350337, -53157345, -44768753, -44763617, -11010257, -11076307, -19407763, -19540873, -29043513, -12193329, -16322098, -48859186, -48887842, -61468674, -61521946, -57380882, -40568850, -40568835, -40574004, -36378676, -44763172, -15214748, -15247516, -32025756, -32034187, -32038073, -15260338, -11127458, -36287394, -57258914, -57156513, -57281505, -57367521, -590044901, -585845477, -48914629, -15294673, -11100882, -19473042, -19606145, -29044273, -33197618, -16354866, -48876578, -65665026, -61403154, -53133330, -57376786, -1131087889, -1131092003, -1114314804, -1110120500, -1084967092, -1625827460, -1625827484, -1105865116, -1088948635, -1088952361, -1122570425, -1118372522, -1135162282, -1126710058, -1126829994, -36380553, -36380547, -44801667, -48941572, -48873492, -44680468, -2749467, -2813979, -19655225, -19634745, -11149105, -11082553, -11078201, -44640953, -44593833, -36326091, -36391643, -36391635, -44768963, -15407779, -15206531, -15276443, -11118875, -2799899, -2881561, -2878514, -44816946, -48880178, -44679730, -44675746, -40415874, -40512146, -40568962, -40574178, -36379893, -44763365, -48914641, -44654801, -11092625, -2622097, -11217569, -27995697, -32017969, -15306290, -15329794, -48886289, -44753425, -1110098449, -1131118609, -1131096083, -1114314804, -1114316084, -1110134196, -1118456292, -1088973276, -1088956892, -1122642395, -1122503145, -1122504954, -1122566858, -1126769610, -1130970026, -1114192826, -1114116026, -1076563881, -15437697, -15436547, -15385107, -15320083, -27911443, -23720211, -23851011, -19630129, -19635249, -15212081, -48826929, -65612465, -61420521, -53109705, -57297881, -53169107, -44768195, -48437987, -14813859, -14780435, -10594587, -18987291, -23312667, -19642369, -20682801, -12098098, -48862002, -65643314, -61453218, -52998818, -57281154, -57347282, -57351618, -36380129, -44763617, -44638401, -44638867, -2630555, -11217803, -11218731, -15371825, -15310386, -15321138, -48886058, -44626186, -36356122, -40603802, -40602266, -1114312355, -1114316468, -1114266684, -1109937212, -1118332940, -1122658716, -1122705692, -15409436, -15208747, -15274043, -48824873, -44645162, -36256554, -36188074, -36310954, -44765097, -44801961, -48994985, -48792219, -61441179, -36287769, -40546585, -7055673, -2857274, -27925561, -32054841, -15272713, -11086601, -2634635, -6947723, -6949788, -2821003, -44767915, -48962219, -48761003, -48830873, -36243865, -6863257, -7059865, -2861242, -11246266, -15309754, -48860090, -61471530, -53082922, -53010953, -594198553, -594268569, -590076299, -590059947, -589858987, -573090475, -573094571, -548022923, -548088459, -569051657, -568859193, -568924730, 1599526338, 1565967826, 1557513702, -590027290, -590027417, -590027417, -573250203, -539630251, -539495084, -564798092, -564798092, -564789932, -564660908, -564799532, -547884075, -581504057, -581512250, -598292778, -598222874, -598378650, -581666970, -581667482, -581687946, -573217673, 1574401143, 1574393173, 1574395221, 1607826773, 1599405429, 1599403511, 1599600087, 1599533511, 1565966790, 1549189590, 1557518310, 1557423590, 1557427687, 1557423591, 1574233461, 1607988565, 1599526212, 1599489348, 1599557905, 1582690609, -564858587, -564858521, -564681385, -547963578, -539587258, -573141178, -577396873, -40589457, -53168273, -44784849, -48979155, -15403731, -15280851, -283714179, -279519899, -279456411, -279587371, -283840057, -283646514, -283711538, -317304842, -313110554, -302690842, -306940570, -306940562, -306945665, -309042852, -36347012, -36210836, -44607628, -11184268, -11182492, -11141387, -11145531, -11014201, -11092537, -44659257, -44661561, -44576682, -44699530, -44765073, -313233297, -317430419, -317375123};
        String fingerprint = "AQAB3kmYMFISRkNE8nge4YcfjNVO5D4OUVeEO8OP6UGYH2eQ9xCcTdOQ78OdXDiaB1WTYZ-FH2mu4JOg_OiPMDyuEjGP9YJYaQoi_nge_PAZjE2G3PghqhV-_JjiEOFz5Dn2FJqOKVKkIc-J-3iJ5tpQfT_264Ap40fua2gjHloeZD9-fBou4xqyHxeVRtDiEH1yZE6Pv-ARrvng_aicrNCP62Dow_3wrQeT4Y2Ox_gMKZl0tMuRv8OXC32OwwqXFPGk4dJh1HrQHOWaQz-kqTsaN2A2c8jLCndQ74W3COxTgXmi4xdyaDlCHExUXuhZ_Ij1Q8tzhDy-LUZ_4eKFG3kIST_6B3mPLgvRxsF7ZJculC-0ODryKOATgxeN-wjJw7F09Cx0D7x0NDtOcTCfg1mORy-uDboO6j_y-DiZDteF_rDyHE9YxBvh6eiDWmi25tCPq3sg5Uajc2C1HXmKpy36BPYF5lnASw6eHckQpsKP_mAiLx2OHyEbaBmROUdP40ty4UK-4BVxCbN-XE9gSjum58iP_0F4o9E-5IrxHG1duMrR13hoXEbOQ8sRHserC82j9GDwv8h5aFGIjj3C7jhznD0-hUjPGxL-I58ko1WD68jKXLgDkQqPJ2DVPOAdnLiPPhLENKHRg6ilw-EHcwwYknij44yhW8hU4VEuvHiOrgl8B30mtBwcCpGOWscUKzKe4uNxHY21GN2OKynyo-mC8DnOFP_xyoIuIX2OC6-Oij6YnB2O_NByIuSChiPeJ3Cao8eVIXw6UH8OeSg34XHwXrgelIcWJzku3EkTXDzug5GWw5di9DqkG70eeB9uHo3kBGyPP3ghhR-aH_nj4Cs1PEfX4z_sRCqqxSiJ9MJ1eBOhaWB_oW8Ma5DCKkbO4JHAcMnhGyVD45WMK0iUtEd4kKrwFk13dHlxTngR5llQHlp35EuO4xNxIj8-XIcWh8FjC3KYB3cKOzzyHLmaB3-KZtLxQ2Z4PCzCI7zh8cLxMdAyEn_wKB4epOPx5fiLH12TC0e6hWjJHg8J7YePk8F5HP5k4ZB9oTmDHHuuoz-mPA6-Iwd0ND_ywhYdwMeNi0Q-HtqPHKV0NCNxS_hx9EJuHe8hrjjOw88hE35QG3mOHg0jxviiIMeh7YfPHOF3fIgkivClY_qhoqmkIHx4PMePMGcK5smOXzj1QMcjHSeqHszxotGheTOyi8EPJpaOHn8onMkMIrSQ8DBvo1bB_PhRDuEsNId-fBKe40O4SYJPZDl-6NLxSADEhFJIQCACUAooYYwACgCFjFDCICOYcAwKxIRSAEICgFJKMAIYAwApAIAwADAEkEDGQCEMIYYIIRAgRABIkCEECAEoFcYAIgQSxSAkhBPCACGAQhCAQIAFEFAJiAEGKSSEMYAQQIggCgjCAIGAOACEY8ICJYAggCggFABKYSEAAIAIaQQSRBGkBJLIOUEIWIApgAxTgjAgCDCMAgQYRBBoMIgAhAAGiCFIAAEEAQIQZZBgABChgCJKAAaMscogYBEFCgLnpACMOQOMAYgIAQSkQhBiNFIGAEMIMkQgg4hABgDCBEGAEIYsEoAAwpAhAlCEBADKKCQMFMwQYYJggojhJGBEGYOIIgIYoBwBDCgEDjOMGmMIYUyIIAAixCAGKAHSECAYchCARJRQwgBFmBJUGCEAc8oJA5BS2igmCBAEMAEUBIIZIwFgzADEDXLUKgMMMNYAIQExVgBADFNEKMmAUQA";

        params.put("fingerprint", new String[] { fingerprint });
        params.put("length", new String[] { "80" });
        params.put("meta", new String[] { "1" });

        List<FingerprintSearchResult> results = new ArrayList<FingerprintSearchResult>();
        results.add(new FingerprintSearchResult(1.0, 20, 200));
        results.add(new FingerprintSearchResult(0.6, 21, 201));
        when(fingerprintData.search(eq(80), eq(rawFingerprint), eq(0), eq(0.3), eq(0.7))).thenReturn(results);

        ByteArrayOutputStream output = new ByteArrayOutputStream();
        SimpleXMLStreamWriter writer = new SimpleXMLStreamWriter(XMLOutputFactory.newInstance().createXMLStreamWriter(output));
        handler.handleWebServiceRequest(writer, new ParameterMap(params));

        String expectedXML = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
                + "<response status=\"ok\">"
                + "<results>"
                + "<result>"
                + "<id>200</id>"
                + "<score>1.0</score>"
                + "<tracks><track><id>mbid200</id></track></tracks>"
                + "</result>"
                + "<result>"
                + "<id>201</id>"
                + "<score>0.6</score>"
                + "<tracks><track><id>mbid201</id></track></tracks>"
                + "</result>"
                + "</results>"
                + "</response>";

        assertEquals(expectedXML, output.toString());

        verify(context).incrementLookupCount();
        verify(context).incrementSuccessfulLookupCount();
    }

    @Test
    public void testSuccessfulLookup() throws IOException, SQLException, Exception {
        LookupHandler handler = new LookupHandler();
        handler.setFingerprintData(fingerprintData);
        handler.setApplicationData(applicationData);
        handler.setContext(context);

        Map<String, String[]> params = new HashMap<String, String[]>();
        params.put("client", new String[] { "appkey" });

        Application app = new Application();
        app.setId(5);
        when(applicationData.findByApiKey("appkey")).thenReturn(app);

        int[] rawFingerprint = new int[] {1260302791, 1226765698, 1216267650, 1224658306, 1224592802, 1509746150, 1239180775, 1230792167, 1230447941, 1230378245, 1238768901, 1238762769, 1272186144, 1272211232, 1263854369, 1263854371, 1260302659, 1230943682, 1241433474, 1241435522, 1241370034, 1241314786, 1230792166, 1230267750, 1230447879, 1230403335, 1238783745, 1272334097, 1272202528, 1254417696, 1246028129, 1258611173, 1260303815, 1226765698, 1233044866, 1241435522, 1241374114, 1241310694, 1239180775, 1230775783, 1230386501, 1230378245, 1238768901, 1238828337, 1272186144, 1263822113, 1263854373, 1264378743, 1264498115, 1233049026, 1241433474, 1240452482, 1241357746, -914571806, -648761882, -648761882, -648632378, -640239674, -53045433, -36208297, -36404891, -44785300, -48963220, -48990740, -48857108, -48866580, -44676379, -7008283, -7071785, -2857017, -11214386, -15276594, -15272506, -44645033, -36191113, -40520665, -7031771, -2842587, -11214531, -14883555, -48302243, -48302491, -44153115, -35830043, -2865435, -3910689, -12295729, -49912370, -44663602, -61453090, -53064482, -57287298, -57346241, -53157313, -53157345, -44763633, -44698049, -11075793, -2687699, -19407769, -19606441, -28978993, -16256562, -16354354, -48867362, -48886018, -61534218, -53182482, -40601618, -40568849, -40572963, -40572980, -36378676, -11143308, -15214748, -31992028, -1105766811, -32020905, -15243450, -11078394, -36252394, -57228202, -57163690, -57282473, -40570755, -44769171, -48995220, -48923140, -48858132, -44672276, -2748699, -7073803, -2861113, -2858554, -11017778, -15272506, -11086522, -44645289, -36203465, -40520665, -2837467, -11214803, -15408867, -14813859, -48302211, -44108059, -304199963, -275495195, -271301657, -3906609, -12229170, -49908530, -44671794, -61453090, -52966018, -57281154, -57350337, -53157345, -44768753, -44763617, -11010257, -11076307, -19407763, -19540873, -29043513, -12193329, -16322098, -48859186, -48887842, -61468674, -61521946, -57380882, -40568850, -40568835, -40574004, -36378676, -44763172, -15214748, -15247516, -32025756, -32034187, -32038073, -15260338, -11127458, -36287394, -57258914, -57156513, -57281505, -57367521, -590044901, -585845477, -48914629, -15294673, -11100882, -19473042, -19606145, -29044273, -33197618, -16354866, -48876578, -65665026, -61403154, -53133330, -57376786, -1131087889, -1131092003, -1114314804, -1110120500, -1084967092, -1625827460, -1625827484, -1105865116, -1088948635, -1088952361, -1122570425, -1118372522, -1135162282, -1126710058, -1126829994, -36380553, -36380547, -44801667, -48941572, -48873492, -44680468, -2749467, -2813979, -19655225, -19634745, -11149105, -11082553, -11078201, -44640953, -44593833, -36326091, -36391643, -36391635, -44768963, -15407779, -15206531, -15276443, -11118875, -2799899, -2881561, -2878514, -44816946, -48880178, -44679730, -44675746, -40415874, -40512146, -40568962, -40574178, -36379893, -44763365, -48914641, -44654801, -11092625, -2622097, -11217569, -27995697, -32017969, -15306290, -15329794, -48886289, -44753425, -1110098449, -1131118609, -1131096083, -1114314804, -1114316084, -1110134196, -1118456292, -1088973276, -1088956892, -1122642395, -1122503145, -1122504954, -1122566858, -1126769610, -1130970026, -1114192826, -1114116026, -1076563881, -15437697, -15436547, -15385107, -15320083, -27911443, -23720211, -23851011, -19630129, -19635249, -15212081, -48826929, -65612465, -61420521, -53109705, -57297881, -53169107, -44768195, -48437987, -14813859, -14780435, -10594587, -18987291, -23312667, -19642369, -20682801, -12098098, -48862002, -65643314, -61453218, -52998818, -57281154, -57347282, -57351618, -36380129, -44763617, -44638401, -44638867, -2630555, -11217803, -11218731, -15371825, -15310386, -15321138, -48886058, -44626186, -36356122, -40603802, -40602266, -1114312355, -1114316468, -1114266684, -1109937212, -1118332940, -1122658716, -1122705692, -15409436, -15208747, -15274043, -48824873, -44645162, -36256554, -36188074, -36310954, -44765097, -44801961, -48994985, -48792219, -61441179, -36287769, -40546585, -7055673, -2857274, -27925561, -32054841, -15272713, -11086601, -2634635, -6947723, -6949788, -2821003, -44767915, -48962219, -48761003, -48830873, -36243865, -6863257, -7059865, -2861242, -11246266, -15309754, -48860090, -61471530, -53082922, -53010953, -594198553, -594268569, -590076299, -590059947, -589858987, -573090475, -573094571, -548022923, -548088459, -569051657, -568859193, -568924730, 1599526338, 1565967826, 1557513702, -590027290, -590027417, -590027417, -573250203, -539630251, -539495084, -564798092, -564798092, -564789932, -564660908, -564799532, -547884075, -581504057, -581512250, -598292778, -598222874, -598378650, -581666970, -581667482, -581687946, -573217673, 1574401143, 1574393173, 1574395221, 1607826773, 1599405429, 1599403511, 1599600087, 1599533511, 1565966790, 1549189590, 1557518310, 1557423590, 1557427687, 1557423591, 1574233461, 1607988565, 1599526212, 1599489348, 1599557905, 1582690609, -564858587, -564858521, -564681385, -547963578, -539587258, -573141178, -577396873, -40589457, -53168273, -44784849, -48979155, -15403731, -15280851, -283714179, -279519899, -279456411, -279587371, -283840057, -283646514, -283711538, -317304842, -313110554, -302690842, -306940570, -306940562, -306945665, -309042852, -36347012, -36210836, -44607628, -11184268, -11182492, -11141387, -11145531, -11014201, -11092537, -44659257, -44661561, -44576682, -44699530, -44765073, -313233297, -317430419, -317375123};
        String fingerprint = "AQAB3kmYMFISRkNE8nge4YcfjNVO5D4OUVeEO8OP6UGYH2eQ9xCcTdOQ78OdXDiaB1WTYZ-FH2mu4JOg_OiPMDyuEjGP9YJYaQoi_nge_PAZjE2G3PghqhV-_JjiEOFz5Dn2FJqOKVKkIc-J-3iJ5tpQfT_264Ap40fua2gjHloeZD9-fBou4xqyHxeVRtDiEH1yZE6Pv-ARrvng_aicrNCP62Dow_3wrQeT4Y2Ox_gMKZl0tMuRv8OXC32OwwqXFPGk4dJh1HrQHOWaQz-kqTsaN2A2c8jLCndQ74W3COxTgXmi4xdyaDlCHExUXuhZ_Ij1Q8tzhDy-LUZ_4eKFG3kIST_6B3mPLgvRxsF7ZJculC-0ODryKOATgxeN-wjJw7F09Cx0D7x0NDtOcTCfg1mORy-uDboO6j_y-DiZDteF_rDyHE9YxBvh6eiDWmi25tCPq3sg5Uajc2C1HXmKpy36BPYF5lnASw6eHckQpsKP_mAiLx2OHyEbaBmROUdP40ty4UK-4BVxCbN-XE9gSjum58iP_0F4o9E-5IrxHG1duMrR13hoXEbOQ8sRHserC82j9GDwv8h5aFGIjj3C7jhznD0-hUjPGxL-I58ko1WD68jKXLgDkQqPJ2DVPOAdnLiPPhLENKHRg6ilw-EHcwwYknij44yhW8hU4VEuvHiOrgl8B30mtBwcCpGOWscUKzKe4uNxHY21GN2OKynyo-mC8DnOFP_xyoIuIX2OC6-Oij6YnB2O_NByIuSChiPeJ3Cao8eVIXw6UH8OeSg34XHwXrgelIcWJzku3EkTXDzug5GWw5di9DqkG70eeB9uHo3kBGyPP3ghhR-aH_nj4Cs1PEfX4z_sRCqqxSiJ9MJ1eBOhaWB_oW8Ma5DCKkbO4JHAcMnhGyVD45WMK0iUtEd4kKrwFk13dHlxTngR5llQHlp35EuO4xNxIj8-XIcWh8FjC3KYB3cKOzzyHLmaB3-KZtLxQ2Z4PCzCI7zh8cLxMdAyEn_wKB4epOPx5fiLH12TC0e6hWjJHg8J7YePk8F5HP5k4ZB9oTmDHHuuoz-mPA6-Iwd0ND_ywhYdwMeNi0Q-HtqPHKV0NCNxS_hx9EJuHe8hrjjOw88hE35QG3mOHg0jxviiIMeh7YfPHOF3fIgkivClY_qhoqmkIHx4PMePMGcK5smOXzj1QMcjHSeqHszxotGheTOyi8EPJpaOHn8onMkMIrSQ8DBvo1bB_PhRDuEsNId-fBKe40O4SYJPZDl-6NLxSADEhFJIQCACUAooYYwACgCFjFDCICOYcAwKxIRSAEICgFJKMAIYAwApAIAwADAEkEDGQCEMIYYIIRAgRABIkCEECAEoFcYAIgQSxSAkhBPCACGAQhCAQIAFEFAJiAEGKSSEMYAQQIggCgjCAIGAOACEY8ICJYAggCggFABKYSEAAIAIaQQSRBGkBJLIOUEIWIApgAxTgjAgCDCMAgQYRBBoMIgAhAAGiCFIAAEEAQIQZZBgABChgCJKAAaMscogYBEFCgLnpACMOQOMAYgIAQSkQhBiNFIGAEMIMkQgg4hABgDCBEGAEIYsEoAAwpAhAlCEBADKKCQMFMwQYYJggojhJGBEGYOIIgIYoBwBDCgEDjOMGmMIYUyIIAAixCAGKAHSECAYchCARJRQwgBFmBJUGCEAc8oJA5BS2igmCBAEMAEUBIIZIwFgzADEDXLUKgMMMNYAIQExVgBADFNEKMmAUQA";

        params.put("fingerprint", new String[] { fingerprint });
        params.put("length", new String[] { "80" });

        List<FingerprintSearchResult> results = new ArrayList<FingerprintSearchResult>();
        results.add(new FingerprintSearchResult(1.0, 20, 200));
        results.add(new FingerprintSearchResult(0.6, 21, 201));
        when(fingerprintData.search(eq(80), eq(rawFingerprint), eq(0), eq(0.3), eq(0.7))).thenReturn(results);

        ByteArrayOutputStream output = new ByteArrayOutputStream();
        SimpleXMLStreamWriter writer = new SimpleXMLStreamWriter(XMLOutputFactory.newInstance().createXMLStreamWriter(output));
        handler.handleWebServiceRequest(writer, new ParameterMap(params));

        String expectedXML = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
                + "<response status=\"ok\">"
                + "<results>"
                + "<result>"
                + "<id>200</id>"
                + "<score>1.0</score>"
                + "</result>"
                + "<result>"
                + "<id>201</id>"
                + "<score>0.6</score>"
                + "</result>"
                + "</results>"
                + "</response>";

        assertEquals(expectedXML, output.toString());

        verify(context).incrementLookupCount();
        verify(context).incrementSuccessfulLookupCount();
    }

    @Test
    public void testIgnoreDuplicateTracks() throws IOException, SQLException, Exception {
        LookupHandler handler = new LookupHandler();
        handler.setFingerprintData(fingerprintData);
        handler.setApplicationData(applicationData);
        handler.setContext(context);

        Map<String, String[]> params = new HashMap<String, String[]>();
        params.put("client", new String[] { "appkey" });

        Application app = new Application();
        app.setId(5);
        when(applicationData.findByApiKey("appkey")).thenReturn(app);

        int[] rawFingerprint = new int[] {1260302791, 1226765698, 1216267650, 1224658306, 1224592802, 1509746150, 1239180775, 1230792167, 1230447941, 1230378245, 1238768901, 1238762769, 1272186144, 1272211232, 1263854369, 1263854371, 1260302659, 1230943682, 1241433474, 1241435522, 1241370034, 1241314786, 1230792166, 1230267750, 1230447879, 1230403335, 1238783745, 1272334097, 1272202528, 1254417696, 1246028129, 1258611173, 1260303815, 1226765698, 1233044866, 1241435522, 1241374114, 1241310694, 1239180775, 1230775783, 1230386501, 1230378245, 1238768901, 1238828337, 1272186144, 1263822113, 1263854373, 1264378743, 1264498115, 1233049026, 1241433474, 1240452482, 1241357746, -914571806, -648761882, -648761882, -648632378, -640239674, -53045433, -36208297, -36404891, -44785300, -48963220, -48990740, -48857108, -48866580, -44676379, -7008283, -7071785, -2857017, -11214386, -15276594, -15272506, -44645033, -36191113, -40520665, -7031771, -2842587, -11214531, -14883555, -48302243, -48302491, -44153115, -35830043, -2865435, -3910689, -12295729, -49912370, -44663602, -61453090, -53064482, -57287298, -57346241, -53157313, -53157345, -44763633, -44698049, -11075793, -2687699, -19407769, -19606441, -28978993, -16256562, -16354354, -48867362, -48886018, -61534218, -53182482, -40601618, -40568849, -40572963, -40572980, -36378676, -11143308, -15214748, -31992028, -1105766811, -32020905, -15243450, -11078394, -36252394, -57228202, -57163690, -57282473, -40570755, -44769171, -48995220, -48923140, -48858132, -44672276, -2748699, -7073803, -2861113, -2858554, -11017778, -15272506, -11086522, -44645289, -36203465, -40520665, -2837467, -11214803, -15408867, -14813859, -48302211, -44108059, -304199963, -275495195, -271301657, -3906609, -12229170, -49908530, -44671794, -61453090, -52966018, -57281154, -57350337, -53157345, -44768753, -44763617, -11010257, -11076307, -19407763, -19540873, -29043513, -12193329, -16322098, -48859186, -48887842, -61468674, -61521946, -57380882, -40568850, -40568835, -40574004, -36378676, -44763172, -15214748, -15247516, -32025756, -32034187, -32038073, -15260338, -11127458, -36287394, -57258914, -57156513, -57281505, -57367521, -590044901, -585845477, -48914629, -15294673, -11100882, -19473042, -19606145, -29044273, -33197618, -16354866, -48876578, -65665026, -61403154, -53133330, -57376786, -1131087889, -1131092003, -1114314804, -1110120500, -1084967092, -1625827460, -1625827484, -1105865116, -1088948635, -1088952361, -1122570425, -1118372522, -1135162282, -1126710058, -1126829994, -36380553, -36380547, -44801667, -48941572, -48873492, -44680468, -2749467, -2813979, -19655225, -19634745, -11149105, -11082553, -11078201, -44640953, -44593833, -36326091, -36391643, -36391635, -44768963, -15407779, -15206531, -15276443, -11118875, -2799899, -2881561, -2878514, -44816946, -48880178, -44679730, -44675746, -40415874, -40512146, -40568962, -40574178, -36379893, -44763365, -48914641, -44654801, -11092625, -2622097, -11217569, -27995697, -32017969, -15306290, -15329794, -48886289, -44753425, -1110098449, -1131118609, -1131096083, -1114314804, -1114316084, -1110134196, -1118456292, -1088973276, -1088956892, -1122642395, -1122503145, -1122504954, -1122566858, -1126769610, -1130970026, -1114192826, -1114116026, -1076563881, -15437697, -15436547, -15385107, -15320083, -27911443, -23720211, -23851011, -19630129, -19635249, -15212081, -48826929, -65612465, -61420521, -53109705, -57297881, -53169107, -44768195, -48437987, -14813859, -14780435, -10594587, -18987291, -23312667, -19642369, -20682801, -12098098, -48862002, -65643314, -61453218, -52998818, -57281154, -57347282, -57351618, -36380129, -44763617, -44638401, -44638867, -2630555, -11217803, -11218731, -15371825, -15310386, -15321138, -48886058, -44626186, -36356122, -40603802, -40602266, -1114312355, -1114316468, -1114266684, -1109937212, -1118332940, -1122658716, -1122705692, -15409436, -15208747, -15274043, -48824873, -44645162, -36256554, -36188074, -36310954, -44765097, -44801961, -48994985, -48792219, -61441179, -36287769, -40546585, -7055673, -2857274, -27925561, -32054841, -15272713, -11086601, -2634635, -6947723, -6949788, -2821003, -44767915, -48962219, -48761003, -48830873, -36243865, -6863257, -7059865, -2861242, -11246266, -15309754, -48860090, -61471530, -53082922, -53010953, -594198553, -594268569, -590076299, -590059947, -589858987, -573090475, -573094571, -548022923, -548088459, -569051657, -568859193, -568924730, 1599526338, 1565967826, 1557513702, -590027290, -590027417, -590027417, -573250203, -539630251, -539495084, -564798092, -564798092, -564789932, -564660908, -564799532, -547884075, -581504057, -581512250, -598292778, -598222874, -598378650, -581666970, -581667482, -581687946, -573217673, 1574401143, 1574393173, 1574395221, 1607826773, 1599405429, 1599403511, 1599600087, 1599533511, 1565966790, 1549189590, 1557518310, 1557423590, 1557427687, 1557423591, 1574233461, 1607988565, 1599526212, 1599489348, 1599557905, 1582690609, -564858587, -564858521, -564681385, -547963578, -539587258, -573141178, -577396873, -40589457, -53168273, -44784849, -48979155, -15403731, -15280851, -283714179, -279519899, -279456411, -279587371, -283840057, -283646514, -283711538, -317304842, -313110554, -302690842, -306940570, -306940562, -306945665, -309042852, -36347012, -36210836, -44607628, -11184268, -11182492, -11141387, -11145531, -11014201, -11092537, -44659257, -44661561, -44576682, -44699530, -44765073, -313233297, -317430419, -317375123};
        String fingerprint = "AQAB3kmYMFISRkNE8nge4YcfjNVO5D4OUVeEO8OP6UGYH2eQ9xCcTdOQ78OdXDiaB1WTYZ-FH2mu4JOg_OiPMDyuEjGP9YJYaQoi_nge_PAZjE2G3PghqhV-_JjiEOFz5Dn2FJqOKVKkIc-J-3iJ5tpQfT_264Ap40fua2gjHloeZD9-fBou4xqyHxeVRtDiEH1yZE6Pv-ARrvng_aicrNCP62Dow_3wrQeT4Y2Ox_gMKZl0tMuRv8OXC32OwwqXFPGk4dJh1HrQHOWaQz-kqTsaN2A2c8jLCndQ74W3COxTgXmi4xdyaDlCHExUXuhZ_Ij1Q8tzhDy-LUZ_4eKFG3kIST_6B3mPLgvRxsF7ZJculC-0ODryKOATgxeN-wjJw7F09Cx0D7x0NDtOcTCfg1mORy-uDboO6j_y-DiZDteF_rDyHE9YxBvh6eiDWmi25tCPq3sg5Uajc2C1HXmKpy36BPYF5lnASw6eHckQpsKP_mAiLx2OHyEbaBmROUdP40ty4UK-4BVxCbN-XE9gSjum58iP_0F4o9E-5IrxHG1duMrR13hoXEbOQ8sRHserC82j9GDwv8h5aFGIjj3C7jhznD0-hUjPGxL-I58ko1WD68jKXLgDkQqPJ2DVPOAdnLiPPhLENKHRg6ilw-EHcwwYknij44yhW8hU4VEuvHiOrgl8B30mtBwcCpGOWscUKzKe4uNxHY21GN2OKynyo-mC8DnOFP_xyoIuIX2OC6-Oij6YnB2O_NByIuSChiPeJ3Cao8eVIXw6UH8OeSg34XHwXrgelIcWJzku3EkTXDzug5GWw5di9DqkG70eeB9uHo3kBGyPP3ghhR-aH_nj4Cs1PEfX4z_sRCqqxSiJ9MJ1eBOhaWB_oW8Ma5DCKkbO4JHAcMnhGyVD45WMK0iUtEd4kKrwFk13dHlxTngR5llQHlp35EuO4xNxIj8-XIcWh8FjC3KYB3cKOzzyHLmaB3-KZtLxQ2Z4PCzCI7zh8cLxMdAyEn_wKB4epOPx5fiLH12TC0e6hWjJHg8J7YePk8F5HP5k4ZB9oTmDHHuuoz-mPA6-Iwd0ND_ywhYdwMeNi0Q-HtqPHKV0NCNxS_hx9EJuHe8hrjjOw88hE35QG3mOHg0jxviiIMeh7YfPHOF3fIgkivClY_qhoqmkIHx4PMePMGcK5smOXzj1QMcjHSeqHszxotGheTOyi8EPJpaOHn8onMkMIrSQ8DBvo1bB_PhRDuEsNId-fBKe40O4SYJPZDl-6NLxSADEhFJIQCACUAooYYwACgCFjFDCICOYcAwKxIRSAEICgFJKMAIYAwApAIAwADAEkEDGQCEMIYYIIRAgRABIkCEECAEoFcYAIgQSxSAkhBPCACGAQhCAQIAFEFAJiAEGKSSEMYAQQIggCgjCAIGAOACEY8ICJYAggCggFABKYSEAAIAIaQQSRBGkBJLIOUEIWIApgAxTgjAgCDCMAgQYRBBoMIgAhAAGiCFIAAEEAQIQZZBgABChgCJKAAaMscogYBEFCgLnpACMOQOMAYgIAQSkQhBiNFIGAEMIMkQgg4hABgDCBEGAEIYsEoAAwpAhAlCEBADKKCQMFMwQYYJggojhJGBEGYOIIgIYoBwBDCgEDjOMGmMIYUyIIAAixCAGKAHSECAYchCARJRQwgBFmBJUGCEAc8oJA5BS2igmCBAEMAEUBIIZIwFgzADEDXLUKgMMMNYAIQExVgBADFNEKMmAUQA";

        params.put("fingerprint", new String[] { fingerprint });
        params.put("length", new String[] { "80" });

        List<FingerprintSearchResult> results = new ArrayList<FingerprintSearchResult>();
        results.add(new FingerprintSearchResult(1.0, 20, 200));
        results.add(new FingerprintSearchResult(0.6, 21, 200));
        when(fingerprintData.search(eq(80), eq(rawFingerprint), eq(0), eq(0.3), eq(0.7))).thenReturn(results);

        ByteArrayOutputStream output = new ByteArrayOutputStream();
        SimpleXMLStreamWriter writer = new SimpleXMLStreamWriter(XMLOutputFactory.newInstance().createXMLStreamWriter(output));
        handler.handleWebServiceRequest(writer, new ParameterMap(params));

        String expectedXML = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
                + "<response status=\"ok\">"
                + "<results>"
                + "<result>"
                + "<id>200</id>"
                + "<score>1.0</score>"
                + "</result>"
                + "</results>"
                + "</response>";

        assertEquals(expectedXML, output.toString());

        verify(context).incrementLookupCount();
        verify(context).incrementSuccessfulLookupCount();
    }

    @Test
    public void testNoHits() throws IOException, SQLException, Exception {
        LookupHandler handler = new LookupHandler();
        handler.setFingerprintData(fingerprintData);
        handler.setApplicationData(applicationData);
        handler.setContext(context);

        Map<String, String[]> params = new HashMap<String, String[]>();
        params.put("client", new String[] { "appkey" });

        Application app = new Application();
        app.setId(5);
        when(applicationData.findByApiKey("appkey")).thenReturn(app);

        int[] rawFingerprint = new int[] {1260302791, 1226765698, 1216267650, 1224658306, 1224592802, 1509746150, 1239180775, 1230792167, 1230447941, 1230378245, 1238768901, 1238762769, 1272186144, 1272211232, 1263854369, 1263854371, 1260302659, 1230943682, 1241433474, 1241435522, 1241370034, 1241314786, 1230792166, 1230267750, 1230447879, 1230403335, 1238783745, 1272334097, 1272202528, 1254417696, 1246028129, 1258611173, 1260303815, 1226765698, 1233044866, 1241435522, 1241374114, 1241310694, 1239180775, 1230775783, 1230386501, 1230378245, 1238768901, 1238828337, 1272186144, 1263822113, 1263854373, 1264378743, 1264498115, 1233049026, 1241433474, 1240452482, 1241357746, -914571806, -648761882, -648761882, -648632378, -640239674, -53045433, -36208297, -36404891, -44785300, -48963220, -48990740, -48857108, -48866580, -44676379, -7008283, -7071785, -2857017, -11214386, -15276594, -15272506, -44645033, -36191113, -40520665, -7031771, -2842587, -11214531, -14883555, -48302243, -48302491, -44153115, -35830043, -2865435, -3910689, -12295729, -49912370, -44663602, -61453090, -53064482, -57287298, -57346241, -53157313, -53157345, -44763633, -44698049, -11075793, -2687699, -19407769, -19606441, -28978993, -16256562, -16354354, -48867362, -48886018, -61534218, -53182482, -40601618, -40568849, -40572963, -40572980, -36378676, -11143308, -15214748, -31992028, -1105766811, -32020905, -15243450, -11078394, -36252394, -57228202, -57163690, -57282473, -40570755, -44769171, -48995220, -48923140, -48858132, -44672276, -2748699, -7073803, -2861113, -2858554, -11017778, -15272506, -11086522, -44645289, -36203465, -40520665, -2837467, -11214803, -15408867, -14813859, -48302211, -44108059, -304199963, -275495195, -271301657, -3906609, -12229170, -49908530, -44671794, -61453090, -52966018, -57281154, -57350337, -53157345, -44768753, -44763617, -11010257, -11076307, -19407763, -19540873, -29043513, -12193329, -16322098, -48859186, -48887842, -61468674, -61521946, -57380882, -40568850, -40568835, -40574004, -36378676, -44763172, -15214748, -15247516, -32025756, -32034187, -32038073, -15260338, -11127458, -36287394, -57258914, -57156513, -57281505, -57367521, -590044901, -585845477, -48914629, -15294673, -11100882, -19473042, -19606145, -29044273, -33197618, -16354866, -48876578, -65665026, -61403154, -53133330, -57376786, -1131087889, -1131092003, -1114314804, -1110120500, -1084967092, -1625827460, -1625827484, -1105865116, -1088948635, -1088952361, -1122570425, -1118372522, -1135162282, -1126710058, -1126829994, -36380553, -36380547, -44801667, -48941572, -48873492, -44680468, -2749467, -2813979, -19655225, -19634745, -11149105, -11082553, -11078201, -44640953, -44593833, -36326091, -36391643, -36391635, -44768963, -15407779, -15206531, -15276443, -11118875, -2799899, -2881561, -2878514, -44816946, -48880178, -44679730, -44675746, -40415874, -40512146, -40568962, -40574178, -36379893, -44763365, -48914641, -44654801, -11092625, -2622097, -11217569, -27995697, -32017969, -15306290, -15329794, -48886289, -44753425, -1110098449, -1131118609, -1131096083, -1114314804, -1114316084, -1110134196, -1118456292, -1088973276, -1088956892, -1122642395, -1122503145, -1122504954, -1122566858, -1126769610, -1130970026, -1114192826, -1114116026, -1076563881, -15437697, -15436547, -15385107, -15320083, -27911443, -23720211, -23851011, -19630129, -19635249, -15212081, -48826929, -65612465, -61420521, -53109705, -57297881, -53169107, -44768195, -48437987, -14813859, -14780435, -10594587, -18987291, -23312667, -19642369, -20682801, -12098098, -48862002, -65643314, -61453218, -52998818, -57281154, -57347282, -57351618, -36380129, -44763617, -44638401, -44638867, -2630555, -11217803, -11218731, -15371825, -15310386, -15321138, -48886058, -44626186, -36356122, -40603802, -40602266, -1114312355, -1114316468, -1114266684, -1109937212, -1118332940, -1122658716, -1122705692, -15409436, -15208747, -15274043, -48824873, -44645162, -36256554, -36188074, -36310954, -44765097, -44801961, -48994985, -48792219, -61441179, -36287769, -40546585, -7055673, -2857274, -27925561, -32054841, -15272713, -11086601, -2634635, -6947723, -6949788, -2821003, -44767915, -48962219, -48761003, -48830873, -36243865, -6863257, -7059865, -2861242, -11246266, -15309754, -48860090, -61471530, -53082922, -53010953, -594198553, -594268569, -590076299, -590059947, -589858987, -573090475, -573094571, -548022923, -548088459, -569051657, -568859193, -568924730, 1599526338, 1565967826, 1557513702, -590027290, -590027417, -590027417, -573250203, -539630251, -539495084, -564798092, -564798092, -564789932, -564660908, -564799532, -547884075, -581504057, -581512250, -598292778, -598222874, -598378650, -581666970, -581667482, -581687946, -573217673, 1574401143, 1574393173, 1574395221, 1607826773, 1599405429, 1599403511, 1599600087, 1599533511, 1565966790, 1549189590, 1557518310, 1557423590, 1557427687, 1557423591, 1574233461, 1607988565, 1599526212, 1599489348, 1599557905, 1582690609, -564858587, -564858521, -564681385, -547963578, -539587258, -573141178, -577396873, -40589457, -53168273, -44784849, -48979155, -15403731, -15280851, -283714179, -279519899, -279456411, -279587371, -283840057, -283646514, -283711538, -317304842, -313110554, -302690842, -306940570, -306940562, -306945665, -309042852, -36347012, -36210836, -44607628, -11184268, -11182492, -11141387, -11145531, -11014201, -11092537, -44659257, -44661561, -44576682, -44699530, -44765073, -313233297, -317430419, -317375123};
        String fingerprint = "AQAB3kmYMFISRkNE8nge4YcfjNVO5D4OUVeEO8OP6UGYH2eQ9xCcTdOQ78OdXDiaB1WTYZ-FH2mu4JOg_OiPMDyuEjGP9YJYaQoi_nge_PAZjE2G3PghqhV-_JjiEOFz5Dn2FJqOKVKkIc-J-3iJ5tpQfT_264Ap40fua2gjHloeZD9-fBou4xqyHxeVRtDiEH1yZE6Pv-ARrvng_aicrNCP62Dow_3wrQeT4Y2Ox_gMKZl0tMuRv8OXC32OwwqXFPGk4dJh1HrQHOWaQz-kqTsaN2A2c8jLCndQ74W3COxTgXmi4xdyaDlCHExUXuhZ_Ij1Q8tzhDy-LUZ_4eKFG3kIST_6B3mPLgvRxsF7ZJculC-0ODryKOATgxeN-wjJw7F09Cx0D7x0NDtOcTCfg1mORy-uDboO6j_y-DiZDteF_rDyHE9YxBvh6eiDWmi25tCPq3sg5Uajc2C1HXmKpy36BPYF5lnASw6eHckQpsKP_mAiLx2OHyEbaBmROUdP40ty4UK-4BVxCbN-XE9gSjum58iP_0F4o9E-5IrxHG1duMrR13hoXEbOQ8sRHserC82j9GDwv8h5aFGIjj3C7jhznD0-hUjPGxL-I58ko1WD68jKXLgDkQqPJ2DVPOAdnLiPPhLENKHRg6ilw-EHcwwYknij44yhW8hU4VEuvHiOrgl8B30mtBwcCpGOWscUKzKe4uNxHY21GN2OKynyo-mC8DnOFP_xyoIuIX2OC6-Oij6YnB2O_NByIuSChiPeJ3Cao8eVIXw6UH8OeSg34XHwXrgelIcWJzku3EkTXDzug5GWw5di9DqkG70eeB9uHo3kBGyPP3ghhR-aH_nj4Cs1PEfX4z_sRCqqxSiJ9MJ1eBOhaWB_oW8Ma5DCKkbO4JHAcMnhGyVD45WMK0iUtEd4kKrwFk13dHlxTngR5llQHlp35EuO4xNxIj8-XIcWh8FjC3KYB3cKOzzyHLmaB3-KZtLxQ2Z4PCzCI7zh8cLxMdAyEn_wKB4epOPx5fiLH12TC0e6hWjJHg8J7YePk8F5HP5k4ZB9oTmDHHuuoz-mPA6-Iwd0ND_ywhYdwMeNi0Q-HtqPHKV0NCNxS_hx9EJuHe8hrjjOw88hE35QG3mOHg0jxviiIMeh7YfPHOF3fIgkivClY_qhoqmkIHx4PMePMGcK5smOXzj1QMcjHSeqHszxotGheTOyi8EPJpaOHn8onMkMIrSQ8DBvo1bB_PhRDuEsNId-fBKe40O4SYJPZDl-6NLxSADEhFJIQCACUAooYYwACgCFjFDCICOYcAwKxIRSAEICgFJKMAIYAwApAIAwADAEkEDGQCEMIYYIIRAgRABIkCEECAEoFcYAIgQSxSAkhBPCACGAQhCAQIAFEFAJiAEGKSSEMYAQQIggCgjCAIGAOACEY8ICJYAggCggFABKYSEAAIAIaQQSRBGkBJLIOUEIWIApgAxTgjAgCDCMAgQYRBBoMIgAhAAGiCFIAAEEAQIQZZBgABChgCJKAAaMscogYBEFCgLnpACMOQOMAYgIAQSkQhBiNFIGAEMIMkQgg4hABgDCBEGAEIYsEoAAwpAhAlCEBADKKCQMFMwQYYJggojhJGBEGYOIIgIYoBwBDCgEDjOMGmMIYUyIIAAixCAGKAHSECAYchCARJRQwgBFmBJUGCEAc8oJA5BS2igmCBAEMAEUBIIZIwFgzADEDXLUKgMMMNYAIQExVgBADFNEKMmAUQA";

        params.put("fingerprint", new String[] { fingerprint });
        params.put("length", new String[] { "80" });
        params.put("minscore", new String[] { "0.1" });

        ByteArrayOutputStream output = new ByteArrayOutputStream();
        SimpleXMLStreamWriter writer = new SimpleXMLStreamWriter(XMLOutputFactory.newInstance().createXMLStreamWriter(output));
        handler.handleWebServiceRequest(writer, new ParameterMap(params));
        verify(fingerprintData).search(eq(80), eq(rawFingerprint), eq(0), eq(0.1), eq(0.7));

        String expectedXML = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
                + "<response status=\"ok\">"
                + "<results>"
                + "</results>"
                + "</response>";

        assertEquals(expectedXML, output.toString());

        verify(context).incrementLookupCount();
        verify(context, times(0)).incrementSuccessfulLookupCount();
    }

}
