- hosts: all
  tasks:

    - apt: name={{ item }} state=absent
      with_items:
        - chef
        - chef-zero
        - puppet
        - puppet-common

    - name: add pgdg repo key
      apt_key: url=https://www.postgresql.org/media/keys/ACCC4CF8.asc id=ACCC4CF8

    - name: setup pgdg repo
      apt_repository:
        repo: deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_lsb.codename }}-pgdg main
        filename: pgdg
        update_cache: yes

    - apt: name={{ item }} state=installed update_cache=yes
      with_items:
        - postgresql-10
        - postgresql-contrib-10
        - postgresql-server-dev-10
        - python-dev
        - python-virtualenv
        - python-psycopg2
        - python-openssl
        - redis-server
        - libchromaprint0
        - git

    - lineinfile:
        dest=/etc/postgresql/10/main/postgresql.conf
        regexp='^#?listen_addresses = .*'
        line='listen_addresses = \'*\''
      notify: restart postgresql

    - copy: src=pg_hba.conf dest=/etc/postgresql/10/main/pg_hba.conf
      notify: restart postgresql

    - meta: flush_handlers

    - include: build_pg_acoustid.yml

    - include: create_db.yml
      with_items:
        - acoustid
        - acoustid_test

    - pip:
        requirements=/vagrant/{{ item }}
        virtualenv=/vagrant/e
        virtualenv_site_packages=yes
      with_items:
        - requirements.txt
        - test_requirements.txt
      become_user: vagrant

    - lineinfile:
        dest=/home/vagrant/.bashrc
        line='source /vagrant/e/bin/activate'
      become_user: vagrant

    - lineinfile:
        dest=/home/vagrant/.bashrc
        line='export PYTHONPATH=$PYTHONPATH:/vagrant'
      become_user: vagrant

    - lineinfile:
        dest=/home/vagrant/.bashrc
        line='cd /vagrant'
      become_user: vagrant

  handlers:

   - name: restart postgresql
     service: name=postgresql state=restarted
